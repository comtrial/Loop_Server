# Generated by Django 3.2.6 on 2021-08-26 04:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('department', models.IntegerField(choices=[(0, '국어국문학과'), (1, '영어영문학과'), (2, '독어독문학과'), (3, '불어불문학과'), (4, '일어일문학과'), (5, '중어중국학과'), (6, '수학과'), (7, '물리학과'), (8, '화학과'), (9, '패션산업학과'), (10, '해양학과'), (11, '사회복지학과'), (12, '신문방송학과'), (13, '문헌정보학과'), (14, '창의인재개발학과'), (15, '행정학과'), (16, '정치외교학과'), (17, '경제학과'), (18, '무역학부'), (19, '소비자학과'), (20, '기계공학과'), (21, '전기공학과'), (22, '전자공학과'), (23, '산업경영공학과'), (24, '신소재공학과'), (25, '안전공학과'), (26, '에너지화학공학과'), (27, '메카트로닉스공학과'), (28, '컴퓨터공학부'), (29, '정보통신공학과'), (30, '임베디드시스템공학과'), (31, '경영학부'), (32, '세무회계학과'), (33, '테크노경영학과'), (34, '조형예술학부'), (35, '디자인학부'), (36, '공연예술학과'), (37, '체육학부'), (38, '운동건강학부'), (39, '국어교육과'), (40, '영어교육과'), (41, '일어교육과'), (42, '수학교육과'), (43, '체육교육과'), (44, '유아교육과'), (45, '역사교육과'), (46, '윤리교육과'), (47, '도시행정학과'), (48, '도시공학과'), (49, '건설환경공학부'), (50, '환경공학부'), (51, '건축공학과'), (52, '도시건축학부'), (53, '분자의생명전공'), (54, '생명과학전공'), (55, '생명공학전공'), (56, '나노바이오전공'), (57, '동북아통상전공'), (58, '한국통상전공'), (59, '법학부')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customizing',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('contents', models.TextField(null=True)),
                ('seq_id', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user_customizing',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(default='user_id', max_length=100)),
                ('profile_image', models.ImageField(null=True, upload_to='')),
                ('grade', models.CharField(default='신입생', max_length=100)),
                ('class_num', models.CharField(max_length=100)),
                ('real_name', models.CharField(max_length=100)),
                ('author', models.ForeignKey(db_column='author_pk', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user_profile',
            },
        ),
        migrations.CreateModel(
            name='Customizing_imgs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customizing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customizing_image', to='user_api.customizing')),
            ],
            options={
                'db_table': 'auth_user_customizing_imgs',
            },
        ),
    ]
